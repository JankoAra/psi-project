# Generated by Django 5.0.6 on 2024-05-13 17:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tip', models.CharField(choices=[('R', 'Registrovani Korisnik'), ('U', 'Urednik')], db_column='Tip', default='U', max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Korisnik',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clanak',
            fields=[
                ('id_clanka', models.AutoField(db_column='IDClanka', primary_key=True, serialize=False)),
                ('sadrzaj', models.TextField(blank=True, db_column='Sadrzaj', null=True)),
                ('datum_vreme_kreiranja', models.DateTimeField(db_column='DatumVremeKreiranja')),
                ('broj_ocena', models.IntegerField(db_column='BrojOcena')),
                ('zbir_ocena', models.IntegerField(db_column='ZbirOcena')),
                ('id_autora', models.ForeignKey(db_column='IDAutora', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Clanak',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PrijavaNepravilnosti',
            fields=[
                ('id_prijave', models.AutoField(db_column='IDPrijave', primary_key=True, serialize=False)),
                ('datum_vreme_prijave', models.DateTimeField(db_column='DatumVremePrijave')),
                ('id_korisnika', models.ForeignKey(db_column='IDKorisnika', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PrijavaNepravilnosti',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Poruka',
            fields=[
                ('id_poruke', models.AutoField(db_column='IDPoruke', primary_key=True, serialize=False)),
                ('tekst', models.CharField(db_column='Tekst', max_length=400)),
                ('datum_vreme_kreiranja', models.DateTimeField(db_column='DatumVremeKreiranja')),
            ],
            options={
                'db_table': 'Poruka',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RazlogPrijaveDiskusija',
            fields=[
                ('id_razlog_diskusija', models.AutoField(db_column='IDRazlogDiskusija', primary_key=True, serialize=False)),
                ('opis', models.CharField(db_column='Opis', max_length=100)),
            ],
            options={
                'db_table': 'RazlogPrijaveDiskusija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RazlogPrijaveFotografije',
            fields=[
                ('id_razlog_fotografija', models.AutoField(db_column='IDRazlogFotografija', primary_key=True, serialize=False)),
                ('opis', models.CharField(db_column='Opis', max_length=100)),
            ],
            options={
                'db_table': 'RazlogPrijaveFotografije',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RazlogPrijaveKomentar',
            fields=[
                ('id_razlog_komentar', models.AutoField(db_column='IDRazlogKomentar', primary_key=True, serialize=False)),
                ('opis', models.CharField(db_column='Opis', max_length=100)),
            ],
            options={
                'db_table': 'RazlogPrijaveKomentar',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PticaTabela',
            fields=[
                ('id_clanka', models.OneToOneField(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.clanak')),
                ('vrsta', models.CharField(db_column='Vrsta', max_length=60)),
                ('rod', models.CharField(blank=True, db_column='Rod', max_length=60, null=True)),
                ('porodica', models.CharField(blank=True, db_column='Porodica', max_length=60, null=True)),
                ('red', models.CharField(blank=True, db_column='Red', max_length=60, null=True)),
                ('klasa', models.CharField(blank=True, db_column='Klasa', max_length=60, null=True)),
                ('tip', models.CharField(blank=True, db_column='Tip', max_length=60, null=True)),
                ('carstvo', models.CharField(blank=True, db_column='Carstvo', max_length=60, null=True)),
                ('tezina', models.DecimalField(blank=True, db_column='Tezina', decimal_places=2, max_digits=10, null=True)),
                ('velicina', models.DecimalField(blank=True, db_column='Velicina', decimal_places=2, max_digits=10, null=True)),
                ('statusu_grozenosti', models.CharField(blank=True, db_column='StatusUgrozenosti', max_length=60, null=True)),
                ('slika_vrste', models.BinaryField(blank=True, db_column='SlikaVrste', null=True)),
            ],
            options={
                'db_table': 'PticaTabela',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Diskusija',
            fields=[
                ('id_diskusije', models.AutoField(db_column='IDDiskusije', primary_key=True, serialize=False)),
                ('sadrzaj', models.CharField(db_column='Sadrzaj', max_length=400)),
                ('datum_vreme_kreiranja', models.DateTimeField(db_column='DatumVremeKreiranja')),
                ('id_clanka', models.ForeignKey(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.clanak')),
                ('id_pokretaca', models.ForeignKey(db_column='IDPokretaca', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Diskusija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FotografijaGalerija',
            fields=[
                ('id_fotografije', models.AutoField(db_column='IDFotografije', primary_key=True, serialize=False)),
                ('sadrzaj_slike', models.BinaryField(db_column='SadrzajSlike')),
                ('datum_vreme_postavljanja', models.DateTimeField(db_column='DatumVremePostavljanja')),
                ('id_autora', models.ForeignKey(db_column='IDAutora', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('id_clanka', models.ForeignKey(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.clanak')),
            ],
            options={
                'db_table': 'FotografijaGalerija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Komentar',
            fields=[
                ('id_komentara', models.AutoField(db_column='IDKomentara', primary_key=True, serialize=False)),
                ('sadrzaj', models.CharField(db_column='Sadrzaj', max_length=400)),
                ('datum_vreme_postavljanja', models.DateTimeField(db_column='DatumVremePostavljanja')),
                ('id_diskusije', models.ForeignKey(db_column='IDDiskusije', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.diskusija')),
                ('id_korisnika', models.ForeignKey(db_column='IDKorisnika', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Komentar',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NepravilnostClanak',
            fields=[
                ('id_prijave', models.OneToOneField(db_column='IDPrijave', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.prijavanepravilnosti')),
                ('opis', models.CharField(db_column='Opis', max_length=400)),
                ('id_clanka', models.ForeignKey(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.clanak')),
            ],
            options={
                'db_table': 'NepravilnostClanak',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NepravilnostDiskusija',
            fields=[
                ('id_prijave', models.OneToOneField(db_column='IDPrijave', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.prijavanepravilnosti')),
                ('id_diskusije', models.ForeignKey(db_column='IDDiskusije', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.diskusija')),
                ('id_razlog_diskusija', models.ForeignKey(db_column='IDRazlogDiskusija', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.razlogprijavediskusija')),
            ],
            options={
                'db_table': 'NepravilnostDiskusija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NepravilnostFotografija',
            fields=[
                ('id_prijave', models.OneToOneField(db_column='IDPrijave', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.prijavanepravilnosti')),
                ('id_fotografije', models.ForeignKey(db_column='IDFotografije', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.fotografijagalerija')),
                ('id_razlog_fotografija', models.ForeignKey(db_column='IDRazlogFotografija', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.razlogprijavefotografije')),
            ],
            options={
                'db_table': 'NepravilnostFotografija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NepravilnostKomentar',
            fields=[
                ('id_prijave', models.OneToOneField(db_column='IDPrijave', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.prijavanepravilnosti')),
                ('id_komentara', models.ForeignKey(db_column='IDKomentara', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.komentar')),
                ('id_razlog_komentar', models.ForeignKey(db_column='IDRazlogKomentar', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.razlogprijavekomentar')),
            ],
            options={
                'db_table': 'NepravilnostKomentar',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ocena',
            fields=[
                ('id_korisnika', models.OneToOneField(db_column='IDKorisnika', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('datum_vreme_ocenjivanja', models.DateTimeField(db_column='DatumVremeOcenjivanja')),
                ('ocena', models.IntegerField(db_column='Ocena', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('id_clanka', models.ForeignKey(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.clanak')),
            ],
            options={
                'db_table': 'Ocena',
                'managed': True,
                'unique_together': {('id_korisnika', 'id_clanka')},
            },
        ),
        migrations.CreateModel(
            name='PrijavljenNaObavestenja',
            fields=[
                ('id_korisnika', models.OneToOneField(db_column='IDKorisnika', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('datum_vreme_prijave', models.DateTimeField(db_column='DatumVremePrijave')),
                ('primaj_na_mail', models.IntegerField(db_column='PrimajNaMail')),
                ('id_clanka', models.ForeignKey(db_column='IDClanka', on_delete=django.db.models.deletion.PROTECT, to='slobodna_enciklopedija_ptica_srbije.clanak')),
            ],
            options={
                'db_table': 'PrijavljenNaObavestenja',
                'managed': True,
                'unique_together': {('id_korisnika', 'id_clanka')},
            },
        ),
        migrations.CreateModel(
            name='PrimljenePoruke',
            fields=[
                ('id_poruke', models.OneToOneField(db_column='IDPoruke', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='slobodna_enciklopedija_ptica_srbije.poruka')),
                ('procitana', models.IntegerField(db_column='Procitana')),
                ('id_korisnika', models.ForeignKey(db_column='IDKorisnika', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PrimljenePoruke',
                'managed': True,
                'unique_together': {('id_poruke', 'id_korisnika')},
            },
        ),
    ]
